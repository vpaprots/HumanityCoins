buildscript {
    ext {
        springBootVersion = '1.5.4.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath 'org.ajoberstar:gradle-git:1.4.2'
    }
}

ext {
    springCloudVersion = 'Dalston.SR1'
    git = org.ajoberstar.grgit.Grgit
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'maven-publish'
apply from: "$project.rootDir/release/release.gradle"

version = ext.versionName
group 'com.laszloszoboszlai.humanitycoins'
sourceCompatibility = 1.8
def baseName = rootProject.name

task getUpdatedVersion {
    if (rootProject.ext.commitNumber != 0) {
        version = version + '-' +rootProject.ext.commitNumber + '-SNAPSHOT'
    }
    println("VERSION: " + version)
}

jar {
    version = "$version"

    //So we don't reproduce the main jar without springboot when we're publishing the jar to nexus
    onlyIf {
        !file("./build/libs/" + baseName + "-" + "$version" + ".jar").exists()
    }
}

repositories {
    mavenCentral()
}

dependencies {
   // compile('org.springframework.cloud:spring-cloud-starter-eureka-server')
    compile('org.springframework.boot:spring-boot-starter-logging')
    compile('biz.paluch.logging:logstash-gelf:1.11.1')
    testCompile('org.springframework.boot:spring-boot-starter-test')
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

task checkPublishing {
    doLast {
        tasks.matching { it.name.contains("PublicationToMavenRepository") }.all {
            onlyIf { rootProject.ext.commitNumber == 0 || rootProject.ext.isSnapshotRelease }
        }
    }
}
publishSnapshot.finalizedBy checkPublishing
checkPublishing.finalizedBy publish
publish.dependsOn checkPublishing

publishing {
    publications {
        base(MavenPublication) {

            groupId "$group"
            artifactId "$baseName"
            version "$version"

            from components.java

        }
    }

    repositories {

        }
}